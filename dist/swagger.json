{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "MY-BRAND-ANDRE-BE",
        "description": "A description for my APIs backend",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "my-brand-andre-be.onrender.com",
    "tags": [
        {
            "name": "User",
            "description": "API for user in MY-BRAND-ANDRE-BE"
        },
        {
            "name": "Category",
            "description": "API for categories in MY-BRAND-ANDRE-BE"
        },
        {
            "name": "Blog",
            "description": "API for blogs in MY-BRAND-ANDRE-BE"
        }, {
            "name": "Comment",
            "description": "API for comments in MY-BRAND-ANDRE-BE"
        },
        {
            "name": "Contact Message",
            "description": "API for contact messages in MY-BRAND-ANDRE-BE"
        }
    ],
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "description": "JWT authorization of an API",
            "name": "Authorization",
            "in": "header"
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/users": {
            "post": {
                "tags": ["User"],
                "summary": "Create a new user",
                "description": "Creates a new user with the provided information",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User that we want to create",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Invalid user data provided"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "get": {
                "tags": ["User"],
                "summary": "Fetch all users",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves a list of all users",
                "responses": {
                    "200": {
                        "description": "List of users retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": ["User"],
                "summary": "Fetch user by ID",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves user details by their ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "patch": {
                "tags": ["User"],
                "summary": "Update user by ID",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Updates user details by their ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User properties to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "400": {
                        "description": "Invalid user data provided"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": ["User"],
                "summary": "Delete user by ID",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes user by their ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/user": {
            "post": {
                "tags": ["User"],
                "summary": "Login",
                "description": "Logs in the user with the provided credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User credentials",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "description": "Username"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Password"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfully"
                    },
                    "400": {
                        "description": "Invalid login credentials"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/category": {
            "post": {
                "summary": "Create a category",
                "description": "Endpoint to create a new category",
                "tags": ["Category"],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "category to create",
                        "schema": {
                            "$ref": "#/definitions/BCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "summary": "Fetch all categories",
                "description": "Endpoint to fetch all categories",
                "tags": ["Category"],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories fetched successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/category/{id}": {
            "delete": {
                "summary": "Delete category by ID",
                "description": "Endpoint to delete a category by ID",
                "tags": ["Category"],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/createBlogs": {
            "post": {
                "tags": ["Blog"],
                "summary": "Create a new blog",
                "description": "Creates a new blog with the provided information",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Blog data",
                        "schema": {
                            "$ref": "#/definitions/Blog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog created successfully"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/fetchBlogs": {
            "get": {
                "tags": ["Blog"],
                "summary": "Fetch all blogs",
                "description": "Retrieves a list of all blogs",
                "responses": {
                    "200": {
                        "description": "List of blogs retrieved successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/fetchBlogById/{id}": {
            "get": {
                "tags": ["Blog"],
                "summary": "Fetch blog by ID",
                "description": "Retrieves blog details by its ID",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog details retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "404": {
                        "description": "Blog not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/patchBlogById/{id}": {
            "patch": {
                "tags": ["Blog"],
                "summary": "Update blog by ID",
                "description": "Updates blog details by its ID",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated blog data",
                        "schema": {
                            "$ref": "#/definitions/Blog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog updated successfully"
                    },
                    "400": {
                        "description": "Invalid blog data provided"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "404": {
                        "description": "Blog not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/deleteBlogById/{id}": {
            "delete": {
                "tags": ["Blog"],
                "summary": "Delete blog by ID",
                "description": "Deletes blog by its ID",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "404": {
                        "description": "Blog not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/comments": {
            "post": {
                "tags": ["Comment"],
                "summary": "Create a comment",
                "description": "Creates a new comment",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Comment data",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment created successfully"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "get": {
                "tags": ["Comment"],
                "summary": "Fetch all comments",
                "description": "Retrieves a list of all comments",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments fetched successfully"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/comment/{blogId}": {
            "get": {
                "tags": ["Comment"],
                "summary": "Fetch comments by Blog ID",
                "description": "Retrieves comments by Blog ID",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "name": "blogId",
                        "in": "path",
                        "description": "Comment of the provided blog Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments fetched successfully"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/commentLike/{CommentId}": {
            "patch": {
                "tags": ["Comment"],
                "summary": "Update comment by user ID and comment ID",
                "description": "Updates comment details by user ID and comment ID",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "name": "CommentId",
                        "in": "path",
                        "description": "Id of a comment to like",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment updated successfully"
                    },
                    "400": {
                        "description": "Invalid comment data provided"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/contactMsgs": {
            "post": {
                "tags": ["Contact Message"],
                "summary": "Create a contact message",
                "description": "Creates a new contact message",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Contact message data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContactMsg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact message created successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "get": {
                "tags": ["Contact Message"],
                "summary": "Fetch all contact messages",
                "description": "Retrieves a list of all contact messages",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact messages fetched successfully"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/readMsg/{id}": {
            "patch": {
                "tags": ["Contact Message"],
                "summary": "Mark message as read",
                "description": "Marks a contact message as read by its ID",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the message to mark as read",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update read status",
                        "schema": {
                            "$ref": "#/definitions/ContactMsg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message marked as read successfully"
                    },
                    "400": {
                        "description": "Invalid message ID provided"
                    },
                    "401": {
                        "description": "Unauthorized: Token missing or invalid"
                    },
                    "404": {
                        "description": "Message not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "FullName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "FullName",
                "email",
                "password"
            ]
        },
        "BCategory": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                }
            },
            "required": [
                "category"
            ]
        },
        "Blog": {
            "type": "object",
            "properties": {
                "blogCategoryId": {
                    "type": "string"
                },
                "blogTitle": {
                    "type": "string"
                },
                "blogDescription": {
                    "type": "string"
                },
                "blogContent": {
                    "type": "string"
                },
                "blogImg": {
                    "type": "string"
                },
                "blogDate": {
                    "type": "string",
                    "format": "date"
                }
            },
            "required": [
                "blogCategoryId",
                "blogTitle",
                "blogDescription",
                "blogContent",
                "blogImg",
                "blogDate"
            ]
        },
        "Comment": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                },
                "blogId": {
                    "type": "string"
                },
                "commentMsg": {
                    "type": "string"
                },
                "commentLike": {
                    "type": "array"
                },
                "commentDate": {
                    "type": "string",
                    "format": "date"
                }
            },
            "required": [
                "userId",
                "blogId",
                "commentMsg",
                "commentLike",
                "commentDate"
            ]
        },
        "ContactMsg": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "read": {
                    "type": "string",
                    "enum": [
                        "1",
                        "0"
                    ],
                    "default": 0
                },
                "date": {
                    "type": "string",
                    "format": "date"
                }
            },
            "required": [
                "name",
                "email",
                "msg",
                "read",
                "date"
            ]
        }
    }
}
